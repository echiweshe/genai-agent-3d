feat: SVG to 3D converter with basic functionality

- Implemented SVG parser with support for all basic shapes (rect, circle, ellipse, line, polyline, polygon, path, text)
- Added 3D conversion for all SVG elements with proper extrusion
- Created modular architecture with separate modules for parsing, creation, materials, and scene setup
- Implemented basic material handling for fill colors
- Added comprehensive test suite for different SVG elements

Known limitations:
- Transparency/opacity not yet working properly
- Strokes on mesh objects (circles) not rendering correctly
- Some stroke-only shapes have issues with fill mode settings

Work in progress:
- Material system needs refinement for transparency
- Stroke implementation for mesh objects needs different approach
- Consider using geometry nodes or other methods for better stroke rendering

Tests added:
- test_final_fix.py - Tests for specific transparency and stroke issues
- test_stroke_fill_fixed.py - Comprehensive stroke and fill tests
- Various other test files for different SVG elements

Next steps documented in CURRENT_STATUS.md
